services:
  app:
    container_name: backend-cinema-test
    build:
      context: .
      dockerfile: ./docker/tests/Dockerfile
    working_dir: /usr/src/fastapi
    command: [ "pytest", "-c", "/usr/src/config/pytest.ini", "-m", "e2e",
               "--maxfail=5", "--disable-warnings", "-v", "--tb=short" ]
    env_file:
      - ./docker/tests/.env.test
    depends_on:
      mailhog:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./src:/usr/src/fastapi
    networks:
      - cinema_network_test

  redis:
    container_name: redis-cinema-test
    image: redis:latest
    networks:
      - cinema_network_test

  celery-worker:
    container_name: celery-worker-cinema-test
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "celery", "-A", "tasks.celery_app", "worker", "-l", "info" ]
    env_file:
      - ./docker/tests/.env.test
    depends_on:
      - redis
    networks:
      - cinema_network_test

  celery-beat:
    container_name: celery-beat-cinema-test
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "celery", "-A", "tasks.celery_app", "beat", "-l", "info" ]
    env_file:
      - ./docker/tests/.env.test
    depends_on:
      - redis
      - celery-worker
    networks:
      - cinema_network_test

  mailhog:
    container_name: mailhog-cinema-test
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - cinema_network_test

  minio:
    container_name: minio-cinema-test
    image: minio/minio:latest
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - ./docker/tests/.env.test
    volumes:
      - minio_data_test:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - cinema_network_test

  minio-mc:
    container_name: minio-init-test
    build:
      context: .
      dockerfile: docker/minio_mc/Dockerfile
    command: [ "sh", "/scripts/setup_minio.sh" ]
    env_file:
      - ./docker/tests/.env.test
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - cinema_network_test

volumes:
  minio_data_test:

networks:
  cinema_network_test: